/*Давайте напишем популярную игру, которая называется "Виселица". В игре вам
нужно угадать слово, которое загадала программа, буква за буквой. Игрок
угадывает одну букву за раз и может ошибиться только 6 раз (после этого он
проигрывает).
Необходимый функционал вашей программы:
 создайте массив слов (например, поместите туда 40 слов) и случайным
образом выберите 1 слово для угадывания;
 программа должна выводить длину всего слова и отображать буквы, которые
угадал игрок;
 после каждого неудачного угадывания программа должна сообщить игроку,
сколько у него осталось попыток неверно указать букву, прежде чем он
проиграет;
 если игрок указал букву, которую ранее уже угадывал, и она не дублируется в
слове, то не наказывайте его, а просто предоставьте возможность угадать
букву еще раз.*/

#include <iostream>
#include <string>                              // Для строк; 
#include <wchar.h>                             // Для работы с кириллицей;
#include <array>                               // Для массива слов;
//#include <windows.h>                          // Раскоментировать для подключения 
                                                //  кириллицы в Windows; 
 
class TheGame                                               // Создаём класс для игры; 
{
private:
    const std::array<std::wstring, 40> m_arrWords           // Массив слов (используется std::array
    {                                                       //  так как у него проще размер определить;
         L"ИЛЛЮСТРАЦИЯ", L"ОПАСЛИВОСТЬ", L"НАРОДОВОЛЬСТВО", L"ОДЕРЖИМОСТЬ",  
         L"НЕОТДЕЛИМОСТЬ", L"ТАЁЖНИК", L"ДУХОТА", L"КОМПЛЕКТ", L"ОТТАЛКИВАНИЕ", 
         L"ПОРТРЕТИРОВАНИЕ", L"ПРОСИТЕЛЬНИЦА", L"НАВЁРСТЫВАНИЕ", L"КАРНАВАЛ",
         L"СВЕРХЧЕЛОВЕК", L"ТЕЛЕФОНОГРАММА", L"ВИДЕОКАМЕРА", L"ВАЛЕЖНИК",  
         L"ЖИДКОСТЬ", L"КОРЕНЬ", L"КОЗЕРОГ", L"АРОМАТ", L"КОЧЕРЫЖКА", L"ВОКАЛ", 
         L"КАСКАДЁР", L"ПЕЧАТЬ", L"МУНДИР", L"ПЛАТФОРМА", L"КАРАКУЛЬ", 
         L"МАСЛИНА", L"ЦИРКУЛЬ", L"БУРЬЯН", L"МЕТЕОРИТ", L"КОМЕТА", L"ЗАУСЕНЕЦ",
         L"ОЛЬШАНИК", L"КИСЛОРОД", L"РУЧЕЙ", L"БУГОР", L"ПОЧТАЛЬОН", L"РУЛЕТКА"                          
    };
    
    std::wstring m_word{L""};                               // Переменная для загаданного слова;
    std::wstring m_copyWord{L""};                           // Копия загаданного слова;
    std::wstring m_namedLetters{L" "};                      // Строка для названных букв;
    std::wstring m_guessedLetters{L""};                     // Строка для угаданных букв;
    std::wstring m_next{L" "};                              // Строка для формирования вывода;    
    size_t m_attempt{7};                                    // Возможное количество ошибок пользователя;
    size_t m_lengthWord{0};                                 // Длянна загаданного слова;
    
public:
    TheGame()                                               // Конструктор;
    {
        choiceWord();                                       // Выбираем слово; 
        std::wcout << L"Слово - ";              
        while(m_attempt)                                    // Перезапускаем цикл пока у пользователя
            bodyGame();                                     //  есть возможность ошибаться; 
    };
    
    void choiceWord()                                       // Метод выбора слова;
    {       
       m_word = m_arrWords[rand()%(m_arrWords.size())];     // Выбираем случайное слово из массива;
       m_lengthWord = m_word.length();                      // Записываем длинну слова в переменную;
       for (auto letter : m_word)
       {
            m_guessedLetters += '_';                        // Придаём строке угаданных букв первоначальный вид;
            m_copyWord += letter;                           // Создаём копию слова 
            m_copyWord += ' ';                              //   с пробелами; 
       }
    }
    
    const void printWord()                                  // Метод вывода строки с буквами на экран;
    {        
        for (auto letter : m_guessedLetters)
            std::wcout << letter << ' ';                    // Печатаем знаки разделяя пробелами; 
        std::wcout << "\n\n";   
    }
    
    void bodyGame()                                         // Метод тела игры;
    {
         printWord();                                       // Выводим строку на экран;
         std::wcout << L"Угадайте" << m_next << L"букву: ";
         wchar_t letter;                                    // Переменная для буквы от пользователя; 
         std::wcin  >> letter;                              // Запрашиваем ввод символа;
         std::wcin.ignore(32767, '\n');                     // Очищаем поток от лишних символов;
         
         letter = towupper(letter);                         // Преобразуем введённый символ в верхний регистр;
         std::wstring::size_type position;                  // Переменная для индекса буквы в слове;
         position = m_word.find(letter);                    // Определяем позицию буквы в слове; 
         
         if (position == std::wstring::npos)                // Если буквы в слове нет - 
         {    
             mistake(letter);                                     //  запускаем обработку этого случая;
         }            
         else                                               // Если буква в слове есть;
         {
             m_guessedLetters[position] = letter;           // Добавляем букву в строку вывода;   
             m_word[position] = '!';                        // Заменяем эту буку в загаданном слове на "!";
             m_namedLetters += letter;                      // Добавляем букву в строку названных букв;
             --m_lengthWord;                                // Уменьшаем переменную на единицу;
             std::wcout << L"\nВерно! - "; 
             if (!m_lengthWord)                             // Если слово разгаданно полностью;
             {
                 printWord();                               // Выводим строку на экран;
                 std::wcout << L"\nПОЗДРАВЛЯЕМ!!! Вы полностью разгадали слово!\n\n";
                 m_attempt = 0;                             // Уменьшаем количество возможных ошибок  
             }                                              //  до 0 для выхода из цикла;
             m_next = L" следующую ";
         } 
         m_namedLetters += letter;                          
    }
    
    void mistake(wchar_t letter)                                 // Обработке неверного ответа;
    {    
         if (m_namedLetters.find(letter) == std::wstring::npos)  // Если буква не называлась ранее;
         {
             --m_attempt;                                        // Уменьшаем количество возможных ошибок;
             std::wcout << L"\nНеверно! Такой буквы нет.\n";
             
             switch (m_attempt)                                  // Формируем вывод в соответствии с
             {                                                   //   количеством воможных ошибок;   
                 case 0:  std::wcout << L"\nВы проиграли.\n\n" <<
                                        m_pictureArr[0] <<       // Выводим картинку;
                                        L"\nБыло загаданно слово \n\n\t" <<
                                        m_copyWord << "\n\n";    // Выводим загаданное слово на экран;
                          return;
                 case 1:  std::wcout << L"Вам больше нельзя ошибаться!\n\n" <<
                                        m_pictureArr[1];
                          break;
                 case 2:
                 case 3: 
                 case 4: 
                 case 5:                 
                 case 6:  sentence();                            // Выводим сообщение с картинкой;  
                          break; 
                 default: std::wcout << L"Наверно... В следующей жизни... ";
                          break;                                 
             }                             
         }
         else std::wcout << L"Вы уже называли эту букву - в "           // Если буква уже называлась;
                             "неразгаданной части слова её нет.\n"
                             "Попытка не засчитана, попробуйте ещё раз.\n";
                             
         std::wcout <<L"\nСлово - ";        
    }
    
    const void sentence()                                   // Метод вывода картинки и сообщения;
    {                
        std::wcout << '\n' << m_pictureArr[m_attempt] << '\n';  // Печатаем картинку;
        std::wcout << L"Вы можете ещё " << m_attempt-1;         // Печатаем сообщение;
        if (m_attempt == 2 || m_attempt == 6) 
             std::wcout << L" раз";
        else std::wcout << L" раза";
        std::wcout << L" неверно назвать букву!\n"; 
    }
    
    const std::array<std::wstring, 7> m_pictureArr                      // Массив с псевдографикой;
    {         
         L"\t___________________\n\t  ||     |     ||\n\t  ||     @     ||\n"
          "\t  ||    |O|    ||\n"
          "\t  ||     П     ||\n     _____||___________||_____\n",
         L"\t___________________\n\t  ||     |     ||\n\t  ||     @     ||\n"
          "\t  ||    /O\\    ||\n"
          "\t  ||    _Л_    ||\n     _____||_____П_____||_____\n",
         L"\t___________________\n\t  ||     |     ||\n\t  ||     Q     ||\n"
          "\t  ||           ||\n"
          "\t  ||    ___    ||\n     _____||_____П_____||_____\n",
         L"\t___________________\n\t  ||           ||\n\t  ||           ||\n"
          "\t  ||           ||\n"
          "\t  ||    ___    ||\n     _____||_____П_____||_____\n",
         L"\t___________________\n\t  ||           ||\n\t  ||           ||\n"
          "\t  ||           ||\n"
          "\t  ||           ||\n     _____||___________||_____\n",          
         L"\t  ||           ||\n\t  ||           ||\n\t  ||           ||\n"
          "\t  ||           ||\n     _____||___________||_____\n",         
         L"\t  ||\n\t  ||\n\t  ||\n\t  ||\n     _____||__________________\n"  
    };    
};
 
 
int main()
{  
    //SetConsoleCP(1251);                         // Пользователям Windows для подключения
    //SetConsoleOutputCP(1251);                   //   кириллицы раскоментировать эти две строки;
    setlocale(LC_ALL, "");                 // Подключаем локаль;
    
    std::wcout << L"       *** Добро пожаловать в игру «Виселица»! ***\n\n";    
                 
    srand(time(0));                       // точка отсчёта для генератора случайных чисел;
    
    wchar_t key{L'Д'};                    // Ключ для прерывания цикла;
    while(key == L'Д')                    // Цикл для перезапуска игры;
    {
        std::wcout << L"Вам нужно угадать слово, которое загадала программа, буква за буквой.\n"
                       "Вы угадываете по одной букве и можете ошибиться только 6 раз.\n\n";
        TheGame game;                    // Создаём объект класса;
        std::wcout << L"Желаете сыграть ещё раз ( Д / Н )?\n";
        std::wcin  >> key;               // Запрашиваем ввод ключа;
        key = towupper(key);             // Переводим символ в верхний регистр
        std::wcout << '\n';      
    }
    std::wcout << L"До новых встреч!\n\n";
 
    return 0;
}
